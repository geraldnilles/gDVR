#!/usr/bin/env python

# Scheduler
#
# The Scheduler is a script that reads the local database and looks for matching
# shows.  If a match is found, it will create a file in the "scheudle" folder.
# Once a file is placed in /schedule/ the queuer will set it up for the
# capturer process. 
#
# The code here is not tested.  It is simply a rough draft of the function
# setup.  The scheduler process will not be implemented until the 0.4 version
# release. 

import common
import json

# Scan for titles that match the provided substringg
#
# This is to test how long it takes to scan the DB
def test_title_match(substr):

	for e_fn in common.full_path_list("episodes"):
		f = open(e_fn,"r")
		e = json.load(f)
		f.close()

		title = e["titles"][0]["title120"]

		if substr in title:
			print (e_fn)
			try:
				print (e["titles"])
				print (e["descriptions"])
			except:
				print("Unicode error")


def read_whitelist():
	pass

# Look up the station ID based on the virtual channel number by reading the
# /channel/map file
def lookup_stationID(channel):
	pass

# Read the stationID file in the /schedules directory, load the jSON object and
# return
def get_station_schedule(stationID):
	pass

# Determine if there are any subscrptions that match the given event
def is_subscribed_to(event):
	pass

# Create a schedule file for the provided event.  It will also verify that the
# a schedule wasnt created already
def schedule_event(event,channel):
	pass

def schedule_recordings():

	for channel in read_whitelist():
		stationID = lookup_stationID(channel)
		schedule = get_station_schedule(stationID)
		for event in schedule:
			if is_subscribed_to(event):
				schedule_event(event)
			
		
		

test_title_match("Modern")


# vim:tw=80
